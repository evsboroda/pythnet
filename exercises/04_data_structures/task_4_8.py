# -*- coding: utf-8 -*-
"""
Задание 4.8

Преобразовать IP-адрес в переменной ip в двоичный формат и вывести на стандартный
поток вывода вывод столбцами, таким образом:
- первой строкой должны идти десятичные значения байтов
- второй строкой двоичные значения

Вывод должен быть упорядочен также, как в примере:
- столбцами
- ширина столбца 10 символов (в двоичном формате
  надо добавить два пробела между столбцами
  для разделения октетов между собой)

Пример вывода для адреса 10.1.1.1:
10        1         1         1
00001010  00000001  00000001  00000001

Ограничение: Все задания надо выполнять используя только пройденные темы.

Предупреждение: в разделе 4 тесты можно легко "обмануть" сделав нужный вывод,
без получения результатов из исходных данных с помощью Python.
Это не значит, что задание сделано правильно, просто на данном этапе сложно иначе
проверять результат.
"""

ip = "192.168.3.1"
# output = "\n{:10}" * 2
#output = """
#\n{:10} {:10} {:10} {:10}
#\n{:10} {:10} {:10} {:10}
#""""

octet_a = ip.split(".")[0]
octet_b = ip.split(".")[1]
octet_c = ip.split(".")[2]
octet_d = ip.split(".")[3]

# "{:b}".format(int(ip_split[0]))
# octet_a = "{:b}".format(int(ip.split(".")[0]))
# octet_b = "{:b}".format(int(ip.split(".")[1]))
# octet_c = "{:b}".format(int(ip.split(".")[2]))
# octet_d = "{:b}".format(int(ip.split(".")[3]))

#print(output.format(
#       octet_a, octet_b, octet_c, octet_d,
#       int(octet_a), int(octet_b), int(octet_c), int(octet_d),
#))

print("{3:10}{1:10}{2:10}{3}".format(octet_a, octet_b, octet_c, octet_a),
      "\n{:08b}  {:08b}  {:08b}  {:08b}".format(int(octet_a), int(octet_b), int(octet_c), int(octet_d)))
 
